{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <stdio.h>\
\
struct node\
\{\
    int data;\
    struct node * next;\
\}\
\
main()\
\{\
    int n;\
    printf("enter the size of the linked list : ");\
    scanf("%d", &n);\
    append(n);\
\}\
\
void append(int n)\
\{\
    struct node *head = (struct node*)malloc(sizeof(struct node));\
    printf("Enter the valuse in Head's data part  : ");\
    scanf("%d", &head->data);\
    head->next = NULL;\
    printf("Value present in head's data %d \\n", head->data);\
    printf("Value present in head's link %d \\n", head->next);\
    \
    for(int i=0;i<n;i++)\
    \{\
        struct node *NewNode = (struct node *)malloc(sizeof(struct node*));\
        printf("Enter the value in NewNode Data feild :  ");\
        scanf("%d", &NewNode->data);\
        NewNode->next = NULL;\
        if(head==NULL)\
        \{\
            head = NewNode;\
        \}\
        else\
        \{\
            struct node *p;\
            p=head;\
            while(p->next!=NULL)\
            \{\
                p=p->next;\
            \}\
            p->next=NewNode;\
        \}\
    \}\
    display(head);\
\}\
\
display(int head)\
\{\
    struct node *temp;\
    if(head==NULL)\
    \{\
        printf("LL empty");\
    \}\
    else\
    \{\
        temp = head;\
        while(temp!=NULL)\
        \{\
            printf("Data = %d\\n", temp->data);\
            printf("link = %d\\n", temp->next);\
            temp = temp->next;\
        \}\
    \}\
    addingatfirst(head);\
\}\
\
void addingatfirst(int head)\
\{\
    int data;\
    struct node *firstNode = (struct node *)malloc(sizeof(struct node));\
    printf("Enter the data into newly created first node : ");\
    scanf("%d", &firstNode->data);\
    if(head == NULL)\
    \{\
        head=firstNode;\
    \}\
    else\
    \{\
        firstNode->next=head;\
        head=firstNode;\
        \
    \}\
    display(head);\
\}\
\
\
\
\
\
\
}